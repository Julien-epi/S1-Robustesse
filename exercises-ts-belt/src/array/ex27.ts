// // Exercice 2: Cr√©er un tableau de produits r√©pondant √† plusieurs crit√®res d√©finis par des fonctionsObjectif : Tu dois recevoir une s√©rie de fonctions comme argument qui d√©finissent des crit√®res de s√©lection. Ensuite, tu dois filtrer et retourner une nouvelle liste de produits qui satisfont tous les crit√®res.Utilise Array.reduce (pour v√©rifier que chaque produit satisfait √† toutes les fonctions de condition pass√©es en argument, et les ajouter √† une nouvelle liste).

import { A } from "@mobily/ts-belt";
interface Product {
  name: string;
  price: number;
  inStock: boolean;
}

const products: Product[] = [
  { name: "Laptop", price: 1000, inStock: true },
  { name: "Mouse", price: 25, inStock: false },
  { name: "Keyboard", price: 75, inStock: true },
];

export const filterProducts = (
  products: Product[],
  conditions: Array<(product: Product) => boolean>
): Product[] => {
  return A.reduce(products, [] as Product[], (acc, product) => {
    const satisfiesAllConditions = A.every(conditions, (condition) =>
      condition(product)
    );

    if (satisfiesAllConditions) {
      acc.push(product);
    }

    return acc;
  });
};

export const ArrayFn27 = () => {
  const conditions = [
    (product: Product) => product.price > 50,
    (product: Product) => product.inStock,
  ];

  const filteredProducts = filterProducts(products, conditions);
  console.log("üöÄ ~ ArrayFn27 ~ filteredProducts:", filteredProducts)
};