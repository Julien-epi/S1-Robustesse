// // Exercice 2: Manipuler une valeur nullable et rÃ©cupÃ©rer une valeur par dÃ©fautFonctions Ã  utiliser : fromNullable, isOk, getWithDefault, mapObjectif : CrÃ©er un Result Ã  partir d'une valeur nullable, vÃ©rifier si c'est un succÃ¨s, appliquer une transformation sur la valeur, puis rÃ©cupÃ©rer une valeur par dÃ©faut si l'option est vide.

import { O } from "@mobily/ts-belt";

export const resultFn2 = () => {
  const value = null;
  const result = O.fromNullable<string | null>(value);

  if (O.isSome(result)) {
    console.log("Valeur prÃ©sente:", result);
  } else {
    console.log("Aucune valeur trouvÃ©e.");
  }

  const transformedResult = O.map(result, (val: string) => val.toUpperCase());
  console.log("ðŸš€ ~ resultFn2 ~ transformedResult:", transformedResult)
  const finalValue = O.getWithDefault(transformedResult, "DEFAULT VALUE");
  console.log("ðŸš€ ~ resultFn2 ~ finalValue:", finalValue)
};